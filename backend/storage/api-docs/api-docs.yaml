openapi: 3.1.0
info:
  title: Documentation for FinApp
  description: REST API documentation
  contact:
    name: Boburmirzo Kozimov
    email: bobur.kozimov@gmail.com
  version: 1.0.0
servers:
  - url: /api
paths:
  /login:
    post:
      tags:
        - Auth
      summary: Login to your account
      description: Use this route to login your page once the client has been registered
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              properties:
                  uuid:
                    type: string
                  auth_key:
                    type: string
              example:
                uuid: '998901234567'
                auth_key: auth_key_example
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                type: object
        401:
          description: Token expired
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
        405:
          description: Token is not valid
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
        404:
          description: User with this token does not exist
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
        400:
          description: Invalid credentials
          content:
            application/json:
              schema:
                properties:
                  error:
                    type: string
  /refresh:
    post:
      tags:
        - Auth
      summary: refresh token
      description: refresh token
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              properties:
                uuid:
                  type: string
                refresh_token:
                  type: string
              example:
                uuid: something
                refresh_token: your_refresh_token
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
  /me:
    get:
      tags:
        - Auth
      summary: Personal info
      operationId: me
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  name:
                    type: string
                  show_id:
                    type: integer
                  status:
                    type: boolean
                  balance:
                    type: string
                  phone:
                    type: string
        '401':
          description: Unauthenticated
      security:
        - api_key_security_example: [ ]
  /chat:
    post:
      tags:
        - Chat
      summary: To send a message,first of you need to create a chat room
      description: To send a message in a chat room
      operationId: Chat
      requestBody:
        content:
          application/json:
            schema:
              properties:
                '':
                  properties:
                    message:
                      type: string
                    chat_room_id:
                      type: string
                  type: object
              type: object
              example:
                message: Hello
                chat_room_id: '1'
      responses:
        '200':
          description: Success
      security:
        - api_key_security_example: [ ]
  /chat-room:
    post:
      tags:
        - Chat
      summary: Createing Chat Room
      description: To create a chat room
      operationId: ChatRoom
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: array
                    items:
                      properties:
                        message:
                          type: string
                        chat_room_id:
                          type: string
                      type: object
                type: object
      security:
        - api_key_security_example: [ ]
  /help-request:
    post:
      tags:
        - Help
      summary: Get help from operator
      description: Get help from operator
      operationId: help
      requestBody:
        content:
          application/json:
            schema:
              properties:
                '':
                  properties:
                    phone:
                      type: string
                    name:
                      type: string
                    preferred_language:
                      type: string
                    messenger_type:
                      type: string
                  type: object
              type: object
              example:
                phone: '998901234567'
                name: Boburmirzo Kozimov
                preferred_language: ENGLISH
                messenger_type: TELEGRAM
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: string
                type: object
  /countries:
    get:
      tags:
        - Countries
      summary: Get List of all countries
      description: Get List of all countries
      operationId: countries
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      flag:
                        type: string
                      name_common:
                        type: string
                      name_official:
                        type: string
                type: object
      security:
        - api_key_security_example: [ ]
  /keys:
    get:
      tags:
        - Keys
      summary: Этот api для того чтобы получить Расчетный счет и Номер Кошелка
      description: Первый Расчетный счет ,второй Номер Кошелка
      operationId: countries
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      account_number:
                        type: object
                        properties:
                          sepa:
                            type: string
                          swift:
                            type: string
                      wallet_number:
                        type: object
                        properties:
                          erc:
                            type: string
                          trc:
                            type: string
                type: object
      security:
        - api_key_security_example: [ ]
  /balance:
    post:
      tags:
        - Balance
      summary: Этот api для того чтобы управлять балансном клиента,для пополнение и снятие со счёта
      description: Когда withdraw false - пополнение баланса,withdraw - true снятие со счёта
      operationId: balance
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ReplenishByCASHinOffice'
                - $ref: '#/components/schemas/ReplenishByCASHcourier'
                - $ref: '#/components/schemas/ReplenishByUSDT'
                - $ref: '#/components/schemas/ReplenishByCASHLESS'
                - $ref: '#/components/schemas/WithdrawByCASHinOffice'
                - $ref: '#/components/schemas/WithdrawByCASHcourier'
                - $ref: '#/components/schemas/WithdrawByUSDT'
                - $ref: '#/components/schemas/WithdrawByCASHLESS'
      responses:
        '200':
          description: Success
      security:
        - api_key_security_example: [ ]
  /balance-requisite:
    post:
      tags:
        - BalanceRequisite
      summary: Этот api для того чтобы управлять балансном клиента,для requisite replenish
      operationId: balanceRequisite
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [ 'SWIFT','SEPA' ]
                sum:
                  type: string
                invoice_file:
                  type: string
                  format: binaryХхХЗзЗЗЩз
      responses:
        '200':
          description: Success
      security:
        - api_key_security_example: [ ]
  /cards:
    post:
      tags:
        - VisaCard
      summary: Этот api для того чтобы запросить на выпуск VisaCard
      description: Если хотите создать карту на никнейм то тогда добаляем полю anonymous=true,date yyyy/mm/dd
      operationId: visaCard
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                surname:
                  type: string
                middle_name:
                  type: string
                phone:
                  type: string
                birth_date:
                  type: date
                scan_passport:
                  type: string
                  format: binary
                selfie_passport:
                  type: string
                  format: binary
                anonymous:
                  type: boolean
                anonymous_name:
                  type: string
                anonymous_surname:
                  type: string
      responses:
        '200':
          description: Success
      security:
        - api_key_security_example: [ ]
    get:
      tags:
        - VisaCard
      summary: Этот api для того чтобы запросить all VisaCard
      operationId: visaCardAll
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                    properties:
                      current_page:
                        type: integer
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                          balance:
                            type: string
                          card_number:
                            type: string
                          expire_date:
                            type: string
                          status:
                            type: string
                          card_holder:
                            type: string
                      first_page_url:
                        type: string
                      from:
                        type: integer
                      next_page_url:
                        type: string
                      path:
                        type: string
                      per_page:
                        type: integer
                      prev_page_url:
                        type: string
                      prev_page:
                        type: integer
                      to:
                        type: string

      security:
        - api_key_security_example: [ ]
  /cards/{card}/manage:
    post:
      tags:
        - VisaCard
      summary: Этот api для того чтобы заполнить счёт VisaCard
      description: Оплата по реквизитам можно выполнить когда withdaw = true,invoice_file не обезательное поле,это для того чтобы сделать оплату по реквизитам
      operationId: visaCardManagement
      parameters:
        - name: card
          in: path
          description: ID of card to replenish
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                sum:
                  type: string
                type:
                  type: string
                  enum: [ 'SEPA','SWIFT' ]
      responses:
        '200':
          description: Success
      security:
        - api_key_security_example: [ ]
  /uploadFile:
    post:
      tags:
        - Chat
      summary: Этот api для того чтобы загрузить файлы в чате
      description: Перед тем как отправить файл нужно узнать тип файла
      operationId: fileUpload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                chat_room_id:
                  type: integer
                type:
                  type: string
                  enum: [ 'audio', 'video','image','doc' ]
                message:
                  type: string
                  format: binary
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      properties:
                        path:
                          type: string
                      type: object
                type: object
      security:
        - api_key_security_example: [ ]
  /balance-transactions-history?status=&withdraw:
    get:
      tags:
        - Balance
      summary: Balance transaction history
      operationId: balanceHistory
      parameters:
        - name: status
          in: query
          description: Status of transactions
          required: false
          schema:
            type: string
            enum: ['waiting', 'hold','success','canceled','verification']
        - name: withdraw
          in: query
          description: operation_type of transactions
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                    properties:
                      current_page:
                        type: integer
                      data:
                        type: object
                        properties:
                          id:
                            type: string
                          sum:
                            type: string
                          status:
                            type: string
                          usdt_type:
                            type: string
                          type:
                            type: string
                          withdraw:
                            type: string
                          withdraw_account_number:
                            type: string
                          created_at:
                            type: date
                      first_page_url:
                        type: string
                      from:
                        type: integer
                      next_page_url:
                        type: string
                      path:
                        type: string
                      per_page:
                        type: integer
                      prev_page_url:
                        type: string
                      prev_page:
                        type: integer
                      to:
                        type: string

        '401':
          description: Unauthenticated
      security:
        - api_key_security_example: [ ]
  /branches:
    get:
      tags:
        - Branches
      summary: Этот api для того чтобы получить Branches
      operationId: branchId
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      lat:
                        type: string
                      lon:
                        type: string
                      address:
                        type: string
                      working_hours:
                        type: string
                      contact_number:
                        type: string
                      contact_email:
                        type: string
                      full_address:
                        type: string
                      country_name:
                        type: object
                        properties:
                          name_ru:
                            type: string
                          name_en:
                            type: string
#                          name_heb:
#                            type: string
      security:
        - api_key_security_example: [ ]
components:
  schemas:
    ReplenishByCASHcourier:
      type: object
      properties:
        type:
          type: string
          enum: [ 'CASH' ]
        country:
          type: integer
        currency:
          type: string
        contact:
          type: string
        sum:
          type: string
        phone:
          type: string
        delivery:
          type: string
          enum: [ 'office' ]
        withdraw:
          type: boolean
          enum:
            - false
    ReplenishByCASHinOffice:
      type: object
      properties:
        type:
          type: string
          enum: [ 'CASH' ]
        country:
          type: integer
        branch_id:
          type: integer
        delivery:
          type: string
          enum: [ 'office' ]
        withdraw:
          type: boolean
          enum:
            - false
    ReplenishByUSDT:
      type: object
      properties:
        type:
          type: string
          enum: [ 'USDT' ]
        currency:
          type: string
          enum: [ 'usd','eur' ]
        key_id:
          type: integer
        sum:
          type: string
        withdraw:
          type: boolean
          enum:
            - false
        usdt_type:
          type: string
          enum: [ 'ERC','TRC' ]
        info:
          type: string
    ReplenishByCASHLESS:
      type: object
      properties:
        type:
          type: string
          enum: [ 'CASHLESS' ]
        currency:
          type: string
          enum: [ 'usd','eur' ]
        key_id:
          type: integer
        sum:
          type: string
        withdraw:
          type: boolean
          enum:
            - false
        info:
          type: string


    WithdrawByCASHcourier:
      type: object
      properties:
        type:
          type: string
          enum: [ 'CASH' ]
        country:
          type: integer
        currency:
          type: string
        contact:
          type: string
        sum:
          type: string
        phone:
          type: string
        delivery:
          type: string
          enum: [ 'courier' ]
        withdraw:
          type: boolean
          enum:
            - true
    WithdrawByCASHinOffice:
      type: object
      properties:
        type:
          type: string
          enum: [ 'CASH' ]
        country:
          type: integer
        branch_id:
          type: integer
        delivery:
          type: string
          enum: [ 'office' ]
        withdraw:
          type: boolean
          enum:
            - true
    WithdrawByUSDT:
      type: object
      properties:
        type:
          type: string
          enum: [ 'USDT' ]
        currency:
          type: string
          enum: [ 'usd','eur' ]
        withdraw_account_number:
          type: string
        sum:
          type: string
        withdraw:
          type: boolean
          enum:
            - true
        usdt_type:
          type: string
          enum: [ 'ERC','TRC' ]
        info:
          type: string
    WithdrawByCASHLESS:
      type: object
      properties:
        type:
          type: string
          enum: [ 'CASHLESS' ]
        currency:
          type: string
          enum: [ 'usd','eur' ]
        withdraw_account_number:
          type: string
        sum:
          type: string
        withdraw:
          type: boolean
          enum:
            - true
        info:
          type: string


  securitySchemes:
    api_key_security_example:
      type: http
      description: A short description for security scheme
      name: Authorization
      scheme: Bearer
      in: header
      bearerFormat: JWT
security:
  - oauth2_security_example:
      - read
      - write

